//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET
{

public sealed partial class PlayerNumericConfig :  Bright.Config.BeanBase 
{
    public PlayerNumericConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        BaseValue = _buf.ReadLong();
        IsNeedShow = _buf.ReadBool();
        IsAddPoint = _buf.ReadBool();
        PostInit();
    }

    public static PlayerNumericConfig DeserializePlayerNumericConfig(ByteBuf _buf)
    {
        return new PlayerNumericConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 初始基础值
    /// </summary>
    public long BaseValue { get; private set; }
    /// <summary>
    /// 是否用于展示
    /// </summary>
    public bool IsNeedShow { get; private set; }
    /// <summary>
    /// 是否用于加成点
    /// </summary>
    public bool IsAddPoint { get; private set; }

    public const int __ID__ = -278520018;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "BaseValue:" + BaseValue + ","
        + "IsNeedShow:" + IsNeedShow + ","
        + "IsAddPoint:" + IsAddPoint + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
